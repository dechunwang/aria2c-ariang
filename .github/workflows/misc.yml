# This is a basic workflow to help you get started with Actions
name: Deploy to heroku by dockerhub

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: download static http page
        run: |
          array[0]="https://freewebsitetemplates.com/download/space-science.zip"
          array[1]="https://github.com/PavelDoGreat/WebGL-Fluid-Simulation/archive/master.zip"
          array[2]="https://github.com/AYJCSGM/mikutap/archive/master.zip"
          array[3]="https://github.com/ripienaar/free-for-dev/archive/master.zip"
          array[4]="https://freewebsitetemplates.com/download/icecreamwebsitetemplate.zip"
          size=${#array[@]}
          index=$(($RANDOM % $size))
          wget -O /tmp/index.zip "${array[$index]}"
          unzip /tmp/index.zip -d /tmp/index
          mkdir ./static
          mv /tmp/index/*/upload/* ./static  || mv /tmp/index/*/* ./static
          ls ./static
      - name: Creat start script
        env: 
          RCLONE_CONFIG: ${{ secrets.RCLONE_CONFIG }}
          ARIA2C_SECRET: ${{ secrets.ARIA2C_SECRET }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          RCLONE_DESTINATION: ${{ secrets.RCLONE_DESTINATION }}
        run: |
          mkdir -p payload
          cp session ./payload
          cp numUpload ./payload
          cat > tmp << EOF
          SECRET=${ARIA2C_SECRET}
          HEROKU_APP_NAME=${HEROKU_APP_NAME}
          CLONE_CONFIG='${RCLONE_CONFIG}'
          CLONE_DESTINATION=${RCLONE_DESTINATION}
          EOF
          echo "-----env settings in tmp-----"
          cat tmp
          echo "--------------------------"
          
          base64 tmp > ./payload/env.encode

          rm tmp
          sudo apt update
          sudo apt install shc -y
          export CFLAGS=-static 
          shc -r -f  start.sh 
          rm start.sh.x.c start.sh     
          mv start.sh.x start
          shc -r -f  delete.sh 
          rm delete.sh.x.c delete.sh 
          mv delete.sh.x ./payload/delete
          shc -r -f  on-complete.sh 
          rm on-complete.sh.x.c on-complete.sh 
          mv on-complete.sh.x ./payload/on-complete

          wget -q https://downloads.rclone.org/v1.53.0/rclone-v1.53.0-linux-amd64.zip
          unzip -q rclone-v1.53.0-linux-amd64.zip
          base64 rclone-v1.53.0-linux-amd64/rclone > ./payload/clone.zip
          rm rclone-v1.53.0-linux-amd64.zip
          rm -rf rclone-v1.53.0-linux-amd64
          
          wget -q https://github.com/P3TERX/aria2-builder/releases/download/1.35.0_2020.09.04/aria2-1.35.0-static-linux-amd64.tar.gz
          tar xf aria2-1.35.0-static-linux-amd64.tar.gz
          rm aria2-1.35.0-static-linux-amd64.tar.gz
          base64 aria2c > ./payload/worker.zip
          echo "-----files in payload-----"
          ls ./payload/
          echo "--------------------------"

          ls -lart

      - uses: akhileshns/heroku-deploy@v3.6.8  # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}} #Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          branch: master
          usedocker: true
         
